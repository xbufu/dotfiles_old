# Prefix Key
# Default: C-b
# C-b is inconvenient to reach on the keyboard and also vim uses it.

# Set default shell to bash
# Change prefix to CTRL-y 
unbind-key C-b
set-option -g prefix C-y

# To quickly toggle between the last two windows, set the last-window command
# to the same key as the $PREFIX.
bind-key C-y last-window

# Set the command sending delay to 0
set -sg escape-time 1

# Close current window
bind-key C-k kill-window

# Increase scroll limit
set-option -g history-limit 10000

# Fix colors for neovim
set-option -g default-terminal "screen-256color"

# Don't exit copy mode after selecting text
unbind -T copy-mode MouseDragEnd1Pane

# Enable true color
set-option -ga terminal-overrides ",xterm-256color:Tc"

###############
# Status line #
###############

# Position of the status line
set-option -g status-position bottom    # top | bottom

# Update the status line every n-seconds.
set -g status-interval 30

# Keep the window list left-aligned
set -g status-justify left

# Set maximum length of the left status area    (in characters)
set-option -g   status-left-length  50
# Set maximum length of the right status area   (in characters)
set-option -g   status-right-length 60

# Left status bar contents and functionality:
# When status info doesn't fit within status-left-length it gets cut off,
#   when it is shorter, the status area is just shorter.
set -g status-left "#{?client_prefix,#[reverse]#[fg=white]#S#[noreverse],#[fg=black]#S}#[fg=brightwhite]#[fg=default]│"

# Right status bar contents and functionality:
set -g status-right " #[fg=black] #(~/.config/tmux/vpn.sh) "

# Character that separats windows from each other in the status bar.
# this is not a pipe | but a box drawing character │ U-2502
set-window-option -g window-status-separator │

# Lengthen the amount of time status messages are displayed
set-option -g display-time 500
set-option -g display-panes-time 500

# Set background color for current active window
set -g window-status-current-style fg=black,bg=brightwhite
set -g status-style fg=black,bg="#00cc00"

#######################################
# Window handling and Session nesting #
#######################################

# Remove confirmation message when closing windows
bind-key & kill-window

# Open new window in current working directory
bind c new-window -c "#{pane_current_path}"

# Window indexing begins at 1 (not 0)
set -g base-index 1

# For consistency pane indexing begins at 1 as well.
set-window-option -g pane-base-index 1

# Automatically renumber windows
set-option -g renumber-windows on

# Make 0 accesss window 10, since we are 1 based, this follows the order of
# the number keys from left to right
unbind 0
bind-key 0 select-window -t :10

# Window activity monitor
# Turns on activity monitoring (aka if there is output)
setw -g monitor-activity on

# Visually marks windows with unread output
set -g visual-activity on

# Use 24h format, everything else doesn't make sense.
set-window-option -g clock-mode-style 24

# Keeps tmux from auto renaming windows
set-option -g allow-rename off


#########
# Panes #
#########

# Remove confirmation message when closing panes
bind-key x kill-pane

# Split window along the horizontal axis and open pane in current working directory
bind-key - split-window -v -c "#{pane_current_path}" 

# Split window along the horizontal axis and open pane in current working directory
unbind %
bind-key | split-window -h -c "#{pane_current_path}"

unbind l
bind-key l select-layout even-horizontal

# Use Alt + arrow-keys to move between panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Resize panes using Shift + Alt + arrow-keys to resize panes
bind -n S-M-Left resize-pane -L
bind -n S-M-Right resize-pane -R
bind -n S-M-Up resize-pane -U
bind -n S-M-Down resize-pane -D

# Split Highlighting
# Post 1.9, 2.9
set-option -g pane-border-style "fg=brightblack"
set-option -g pane-active-border-style "fg=white"


#####################################################
# Handling Mouse events like clicking, dragging and scrolling

# Activate mouse event supportin tmux.
set -g mouse on

#" sane scrolling:
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft=         '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

#####################################################

# for vim
set-window-option -g xterm-keys on

# Options
set-option -g status-keys vi

# Reload config with capital R
bind-key R source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# Copying
bind -T copy-mode y send-keys -X copy-pipe 'xclip -i -sel p -f | xclip -i -sel c'
